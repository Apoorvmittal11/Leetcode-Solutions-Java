/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    private static int size(ListNode t) {
        int c = 0;
        while (t != null) {
            c++;
            t = t.next;
        }
        return c;
    }

    public ListNode removeNthFromEnd(ListNode head, int n) {
        if (head == null) {
            return null;
        }

        int length = size(head);
        if (n > length) {
            return head;
        }

        if (length == n) {
            return head.next;
        }

        ListNode current = head;
        for (int i = 1; i < length - n; i++) {
            current = current.next;
        }

        if (current.next != null) {
            current.next = current.next.next;
        }

        return head;
    }
}
