https://leetcode.com/problems/prime-in-diagonal/description/
class Solution {
    public int diagonalPrime(int[][] nums) {
    int l = 0;
    int n = nums.length;
    for (int i = 0; i < n; i++) {
        if (isPrime(nums[i][i]) && nums[i][i] > l) {
            l = nums[i][i];
        }
    }
    for (int i = 0; i < n; i++) {
        if (isPrime(nums[i][n - i - 1]) && nums[i][n - i - 1] > l) {
            l = nums[i][n - i - 1];
        }
    }
    return l;
}

public boolean isPrime(int num) {
    if (num <= 1) {
        return false;
    }
    for (int i = 2; i <= Math.sqrt(num); i++) {
        if (num % i == 0) {
            return false;
        }
    }
    return true;
    }
}
