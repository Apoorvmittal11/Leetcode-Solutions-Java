https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal/description/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode bstFromPreorder(int[] preorder) {
        if (preorder == null || preorder.length == 0) {
            return null;
        }
        return constructBST(preorder, 0, preorder.length - 1);
    }
    
    public TreeNode constructBST(int[] preorder, int start, int end) {
        if (start > end) {
            return null;
        }
        TreeNode root = new TreeNode(preorder[start]);
        int index;
        for (index = start; index <= end; index++) {
            if (preorder[index] > root.val) {
                break;
            }
        }
        root.left = constructBST(preorder, start + 1, index - 1);
        root.right = constructBST(preorder, index, end);
        return root;
    }
}
