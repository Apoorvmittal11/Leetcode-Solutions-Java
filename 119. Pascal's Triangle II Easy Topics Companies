https://leetcode.com/problems/pascals-triangle-ii/description/
class Solution {
    public int factorial(int n) {
        if (n == 0) {
            return 1;
        }
        int result = 1;
        for (int i = 1; i <= n; i++) {
            result *= i;
        }
        return result;
    }
    public int nCr(int n, int r) {
        if(r == 0 || r == n){
            return 1;
        }
        int nFactorial = factorial(n);
        int rFactorial = factorial(r);
        int nMinusRFactorial = factorial(n - r);
        return nFactorial / (rFactorial * nMinusRFactorial);
    }
    public List<Integer> getRow(int rowIndex) {
        List<Integer> ans = new ArrayList<>();
        if(rowIndex == 0){
            ans.add(1);
            return ans;
        }
        for (int i = 0; i <= rowIndex; ++i) {
            ans.add(nCr(rowIndex,i));
        }
        return ans;
    }
}
